version: '3.8'

services:
  api-prod:
    build:
      context: .
      target: production
    container_name: HLS-api-prod
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${EXPOSE}:${PORT}"
      - "4000:4000"
    depends_on:
      - api_db
    networks:
      - some-network

  api_db:
    build:
      dockerfile: ./db/Dockerfile
    container_name: HLS-db-prod
    restart: unless-stopped
    command: postgres -c logging_collector=on
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${PGDATA}
    ports:
      - "${DB_PORT}:${DB_PORT}"
      - "5430:5430"
    volumes:
      - postgres_api:/var/lib/postgresql/data
      - postgres_logs:/var/log/postgresql/postgresql.log
    networks:
      - some-network
      - postgres

  pgadmin:
    container_name: pgadmin_container
    user: root
    image: dpage/pgadmin4:5.7
    environment:
      PGADMIN_DEFAULT_EMAIL: "user@user.com"
      PGADMIN_DEFAULT_PASSWORD: "pass"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres

volumes:
  postgres_api:
  postgres_logs:

networks:
  some-network:
    driver: bridge
  postgres:
    driver: bridge
